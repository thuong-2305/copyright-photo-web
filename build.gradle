plugins {
    id 'war'
    id 'java'
    id 'maven-publish'
    id 'java-library'
    id "org.hidetake.ssh" version "2.11.2"
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
    maven { url = uri('https://jitpack.io') } // Thêm JitPack để tìm các thư viện từ GitHub
}
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}
dependencies {
    // Thư viện cần trong quá trình biên dịch và runtime
    implementation 'com.google.code.gson:gson:2.11.0'
    implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:3.0.0'
    implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl:3.0.1'
    implementation 'org.jdbi:jdbi3-core:3.45.0'
    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation 'ch.qos.logback:logback-classic:1.5.6'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.23.1'
    implementation 'com.sun.mail:javax.mail:1.6.2'
    implementation 'org.json:json:20231013'
    implementation 'org.apache.httpcomponents:httpclient:4.5.14'
    implementation 'org.apache.httpcomponents:httpcore:4.4.16'
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.3.1'
    implementation 'org.apache.httpcomponents:fluent-hc:4.5.14'
    implementation 'commons-fileupload:commons-fileupload:1.5'
    implementation 'commons-io:commons-io:2.16.1'
    // Thay thế org.sejda.imageio:webp-imageio bằng thư viện khác
    implementation 'org.sejda.webp-imageio:webp-imageio-sejda:0.1.0'


    // Test dependencies
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
}

group = 'vn.edu.hcmuaf.fit'
version = '1.0-SNAPSHOT'
description = 'CoRiPhoto'

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}
apply plugin: 'org.hidetake.ssh'

remotes {
    host {
        host = '13.212.182.68'                  // IPv4 public của VPS
        user = 'ubuntu'                         // hoặc 'bitnami', tùy hệ điều hành VPS bạn dùng
        identity = file("src/LightsailDefaultKey-ap-southeast-1.pem")
        knownHosts = allowAnyHosts              // Bỏ kiểm tra known_hosts
    }
}

ssh.settings {
    knownHosts = allowAnyHosts
}

import org.hidetake.groovy.ssh.core.Remote

def sshSettings = project.extensions.getByName('ssh')
def remoteHost = remotes.host

tasks.register('docker_upload_file_to_server') {
    def warFile = file("${project.projectDir}/build/libs/CoRiPhoto-1.0-SNAPSHOT.war")

    doLast {
        println 'begin docker_upload_file_to_server'
        sshSettings.run {
            session(remoteHost) {
                execute 'rm -f /usr/deploy/coriphoto.war', ignoreError: true
                execute 'rm -rf /usr/deploy/coriphoto/', ignoreError: true
                put from: warFile.absolutePath, into: "/usr/deploy/coriphoto.war"
            }
        }
    }
}

tasks.register('docker_app_start') {
    doLast {
        println 'begin docker_app_start'
        sshSettings.run {
            session(remoteHost) {
                execute 'docker stop tomcat10', ignoreError: true
                execute 'docker run -it --rm -d ' +
                        '--name tomcat10 ' +
                        '-v /usr/deploy:/usr/local/tomcat/webapps ' +
                        '-p 80:8080 ' +
                        'tomcat:10.1.31'
            }
        }
    }
}


tasks.register('docker_deploy') {
    dependsOn build, docker_upload_file_to_server, docker_app_start

    docker_upload_file_to_server.mustRunAfter build
    docker_app_start.mustRunAfter docker_upload_file_to_server
}

